digraph G{
	ProgramNode0 [label="ProgramNode"];
	CodeBlockNode1 [label="CodeBlockNode"];
	NumberDeclarationNode2 [label="NumDcl\n ="];
	IdentificationNode3 [label="IdNode\nA"];
	NumberDeclarationNode2 -> IdentificationNode3;
	NumberLiteralNode4 [label="Num\n1.0"];
	NumberDeclarationNode2 -> NumberLiteralNode4;
	CodeBlockNode1 -> NumberDeclarationNode2;
	VectorDeclarationNode5 [label="VectorDeclarationNode"];
	IdentificationNode6 [label="IdNode\nu"];
	VectorDeclarationNode5 -> IdentificationNode6;
	VectorExpressionNode7 [label="VectorExpressionNode"];
	NumberLiteralNode8 [label="Num\n1.0"];
	VectorExpressionNode7 -> NumberLiteralNode8;
	NumberLiteralNode9 [label="Num\n2.0"];
	VectorExpressionNode7 -> NumberLiteralNode9;
	VectorDeclarationNode5 -> VectorExpressionNode7;
	CodeBlockNode1 -> VectorDeclarationNode5;
	MatrixDeclarationNode10 [label="MatrixDeclarationNode"];
	IdentificationNode11 [label="IdNode\nV"];
	MatrixDeclarationNode10 -> IdentificationNode11;
	MatrixExpressionNode12 [label="MatrixExpressionNode"];
	VectorExpressionNode13 [label="VectorExpressionNode"];
	NumberLiteralNode14 [label="Num\n1.0"];
	VectorExpressionNode13 -> NumberLiteralNode14;
	NumberLiteralNode15 [label="Num\n2.0"];
	VectorExpressionNode13 -> NumberLiteralNode15;
	MatrixExpressionNode12 -> VectorExpressionNode13;
	VectorExpressionNode16 [label="VectorExpressionNode"];
	NumberLiteralNode17 [label="Num\n2.0"];
	VectorExpressionNode16 -> NumberLiteralNode17;
	NumberLiteralNode18 [label="Num\n3.0"];
	VectorExpressionNode16 -> NumberLiteralNode18;
	MatrixExpressionNode12 -> VectorExpressionNode16;
	MatrixDeclarationNode10 -> MatrixExpressionNode12;
	CodeBlockNode1 -> MatrixDeclarationNode10;
	NumberDeclarationNode19 [label="NumDcl\n ="];
	IdentificationNode20 [label="IdNode\nB"];
	NumberDeclarationNode19 -> IdentificationNode20;
	NumberLiteralNode21 [label="Num\n3.0"];
	NumberDeclarationNode19 -> NumberLiteralNode21;
	CodeBlockNode1 -> NumberDeclarationNode19;
	IfStatementNode22 [label="IfStatementNode"];
	LogicExpressionNode23 [label="LogicExp\n>"];
	IdentificationNode24 [label="IdNode\nB"];
	LogicExpressionNode23 -> IdentificationNode24;
	IdentificationNode25 [label="IdNode\nA"];
	LogicExpressionNode23 -> IdentificationNode25;
	IfStatementNode22 -> LogicExpressionNode23;
	CodeBlockNode26 [label="CodeBlockNode"];
	WhileNode27 [label="WhileNode"];
	LogicExpressionNode28 [label="LogicExp\n<"];
	IdentificationNode29 [label="IdNode\nA"];
	LogicExpressionNode28 -> IdentificationNode29;
	NumberLiteralNode30 [label="Num\n10.0"];
	LogicExpressionNode28 -> NumberLiteralNode30;
	WhileNode27 -> LogicExpressionNode28;
	CodeBlockNode31 [label="CodeBlockNode"];
	AssignmentNode32 [label="AssignmentNode"];
	IdentificationNode33 [label="IdNode\nA"];
	AssignmentNode32 -> IdentificationNode33;
	AdditionNode34 [label="AdditionNode"];
	IdentificationNode35 [label="IdNode\nA"];
	AdditionNode34 -> IdentificationNode35;
	NumberLiteralNode36 [label="Num\n1.0"];
	AdditionNode34 -> NumberLiteralNode36;
	AssignmentNode32 -> AdditionNode34;
	CodeBlockNode31 -> AssignmentNode32;
	WhileNode27 -> CodeBlockNode31;
	CodeBlockNode26 -> WhileNode27;
	IfStatementNode22 -> CodeBlockNode26;
	CodeBlockNode1 -> IfStatementNode22;
	PrintNode37 [label="PrintNode"];
	StringNode38 [label="String\n\"A is \""];
	PrintNode37 -> StringNode38;
	ReferenceNode39 [label="ReferenceNode"];
	IdentificationNode40 [label="IdNode\nA"];
	ReferenceNode39 -> IdentificationNode40;
	PrintNode37 -> ReferenceNode39;
	CodeBlockNode1 -> PrintNode37;
	IfStatementNode41 [label="IfStatementNode"];
	LogicExpressionNode42 [label="LogicExp\n<"];
	NumberLiteralNode43 [label="Num\n1.0"];
	LogicExpressionNode42 -> NumberLiteralNode43;
	NumberLiteralNode44 [label="Num\n2.0"];
	LogicExpressionNode42 -> NumberLiteralNode44;
	IfStatementNode41 -> LogicExpressionNode42;
	CodeBlockNode45 [label="CodeBlockNode"];
	AssignmentNode46 [label="AssignmentNode"];
	IdentificationNode47 [label="IdNode\nu"];
	AssignmentNode46 -> IdentificationNode47;
	VectorExpressionNode48 [label="VectorExpressionNode"];
	NumberLiteralNode49 [label="Num\n3.0"];
	VectorExpressionNode48 -> NumberLiteralNode49;
	NumberLiteralNode50 [label="Num\n4.0"];
	VectorExpressionNode48 -> NumberLiteralNode50;
	AssignmentNode46 -> VectorExpressionNode48;
	CodeBlockNode45 -> AssignmentNode46;
	AssignmentNode51 [label="AssignmentNode"];
	IdentificationNode52 [label="IdNode\nV"];
	AssignmentNode51 -> IdentificationNode52;
	MatrixExpressionNode53 [label="MatrixExpressionNode"];
	VectorExpressionNode54 [label="VectorExpressionNode"];
	NumberLiteralNode55 [label="Num\n3.0"];
	VectorExpressionNode54 -> NumberLiteralNode55;
	NumberLiteralNode56 [label="Num\n2.0"];
	VectorExpressionNode54 -> NumberLiteralNode56;
	MatrixExpressionNode53 -> VectorExpressionNode54;
	VectorExpressionNode57 [label="VectorExpressionNode"];
	NumberLiteralNode58 [label="Num\n2.0"];
	VectorExpressionNode57 -> NumberLiteralNode58;
	NumberLiteralNode59 [label="Num\n1.0"];
	VectorExpressionNode57 -> NumberLiteralNode59;
	MatrixExpressionNode53 -> VectorExpressionNode57;
	AssignmentNode51 -> MatrixExpressionNode53;
	CodeBlockNode45 -> AssignmentNode51;
	PrintNode60 [label="PrintNode"];
	StringNode61 [label="String\n\"u[0] is 3 \""];
	PrintNode60 -> StringNode61;
	SubscriptingReferenceNode62 [label="SubscriptingReferenceNode"];
	IdentificationNode63 [label="IdNode\nu"];
	SubscriptingReferenceNode62 -> IdentificationNode63;
	SubscriptingNode64 [label="Subscript\n[0]"];
	SubscriptingReferenceNode62 -> SubscriptingNode64;
	PrintNode60 -> SubscriptingReferenceNode62;
	CodeBlockNode45 -> PrintNode60;
	IfStatementNode41 -> CodeBlockNode45;
	ElseStatementNode65 [label="ElseStatementNode"];
	ElseIfStatementNode66 [label="ElseIfStatementNode"];
	LogicExpressionNode67 [label="LogicExp\n>"];
	NumberLiteralNode68 [label="Num\n1.0"];
	LogicExpressionNode67 -> NumberLiteralNode68;
	NumberLiteralNode69 [label="Num\n2.0"];
	LogicExpressionNode67 -> NumberLiteralNode69;
	ElseIfStatementNode66 -> LogicExpressionNode67;
	CodeBlockNode70 [label="CodeBlockNode"];
	AssignmentNode71 [label="AssignmentNode"];
	IdentificationNode72 [label="IdNode\nA"];
	AssignmentNode71 -> IdentificationNode72;
	NumberLiteralNode73 [label="Num\n3.0"];
	AssignmentNode71 -> NumberLiteralNode73;
	CodeBlockNode70 -> AssignmentNode71;
	ElseIfStatementNode66 -> CodeBlockNode70;
	ElseStatementNode65 -> ElseIfStatementNode66;
	ElseIfStatementNode74 [label="ElseIfStatementNode"];
	LogicExpressionNode75 [label="LogicExp\n>"];
	NumberLiteralNode76 [label="Num\n3.0"];
	LogicExpressionNode75 -> NumberLiteralNode76;
	NumberLiteralNode77 [label="Num\n2.0"];
	LogicExpressionNode75 -> NumberLiteralNode77;
	ElseIfStatementNode74 -> LogicExpressionNode75;
	CodeBlockNode78 [label="CodeBlockNode"];
	AssignmentNode79 [label="AssignmentNode"];
	IdentificationNode80 [label="IdNode\nA"];
	AssignmentNode79 -> IdentificationNode80;
	NumberLiteralNode81 [label="Num\n4.0"];
	AssignmentNode79 -> NumberLiteralNode81;
	CodeBlockNode78 -> AssignmentNode79;
	ElseIfStatementNode74 -> CodeBlockNode78;
	ElseStatementNode65 -> ElseIfStatementNode74;
	CodeBlockNode82 [label="CodeBlockNode"];
	AssignmentNode83 [label="AssignmentNode"];
	IdentificationNode84 [label="IdNode\nA"];
	AssignmentNode83 -> IdentificationNode84;
	NumberLiteralNode85 [label="Num\n5.0"];
	AssignmentNode83 -> NumberLiteralNode85;
	CodeBlockNode82 -> AssignmentNode83;
	ElseStatementNode65 -> CodeBlockNode82;
	IfStatementNode41 -> ElseStatementNode65;
	CodeBlockNode1 -> IfStatementNode41;
	PrintNode86 [label="PrintNode"];
	SubscriptingReferenceNode87 [label="SubscriptingReferenceNode"];
	IdentificationNode88 [label="IdNode\nV"];
	SubscriptingReferenceNode87 -> IdentificationNode88;
	SubscriptingNode89 [label="Subscript\n[0][1]"];
	SubscriptingReferenceNode87 -> SubscriptingNode89;
	PrintNode86 -> SubscriptingReferenceNode87;
	StringNode90 [label="String\n\" 2\""];
	PrintNode86 -> StringNode90;
	CodeBlockNode1 -> PrintNode86;
	PrintNode91 [label="PrintNode"];
	StringNode92 [label="String\n\"A is  _:-<>#$+/=?,.[]\"\%\""];
	PrintNode91 -> StringNode92;
	ReferenceNode93 [label="ReferenceNode"];
	IdentificationNode94 [label="IdNode\nA"];
	ReferenceNode93 -> IdentificationNode94;
	PrintNode91 -> ReferenceNode93;
	CodeBlockNode1 -> PrintNode91;
	AssignmentNode95 [label="AssignmentNode"];
	IdentificationNode96 [label="IdNode\nA"];
	AssignmentNode95 -> IdentificationNode96;
	IdentificationNode97 [label="IdNode\nB"];
	AssignmentNode95 -> IdentificationNode97;
	CodeBlockNode1 -> AssignmentNode95;
	PrintNode98 [label="PrintNode"];
	ReferenceNode99 [label="ReferenceNode"];
	IdentificationNode100 [label="IdNode\nA"];
	ReferenceNode99 -> IdentificationNode100;
	PrintNode98 -> ReferenceNode99;
	CodeBlockNode1 -> PrintNode98;
	ProgramNode0 -> CodeBlockNode1;
}
